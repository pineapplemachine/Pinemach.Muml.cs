{
  "api/Pinemach.Muml.IMuHasAttributes.html": {
    "href": "api/Pinemach.Muml.IMuHasAttributes.html",
    "title": "Interface IMuHasAttributes | Pinemach.Muml",
    "summary": "Interface IMuHasAttributes Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Interface implemented by MuElement. public interface IMuHasAttributes Extension Methods MuHasAttributesExtensions.HasAttributes(IMuHasAttributes) Properties Attributes Attributes belonging to this object. Attributes are key, value pairs, with non-unique keys. MuAttributes Attributes { get; set; } Property Value MuAttributes"
  },
  "api/Pinemach.Muml.IMuHasMembers.html": {
    "href": "api/Pinemach.Muml.IMuHasMembers.html",
    "title": "Interface IMuHasMembers | Pinemach.Muml",
    "summary": "Interface IMuHasMembers Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Interface implemented by MuDocument and MuElement. public interface IMuHasMembers Extension Methods MuHasMembersExtensions.HasMembers(IMuHasMembers) Properties Members Members belonging to this object. In a document, members are all top-level elements. An element's members are enclosed within curly braces. MuMembers Members { get; set; } Property Value MuMembers"
  },
  "api/Pinemach.Muml.IMuHasValues.html": {
    "href": "api/Pinemach.Muml.IMuHasValues.html",
    "title": "Interface IMuHasValues | Pinemach.Muml",
    "summary": "Interface IMuHasValues Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Interface implemented by MuDocument and MuElement. public interface IMuHasValues Extension Methods MuHasValuesExtensions.GetFirstValue(IMuHasValues) MuHasValuesExtensions.GetLastValue(IMuHasValues) MuHasValuesExtensions.HasValues(IMuHasValues) MuHasValuesExtensions.TryGetFirstValue(IMuHasValues, out string?) MuHasValuesExtensions.TryGetLastValue(IMuHasValues, out string?) Properties Values Values belonging to this object. Values are text preceded with an equals sign. MuValues Values { get; set; } Property Value MuValues"
  },
  "api/Pinemach.Muml.MuAttribute.html": {
    "href": "api/Pinemach.Muml.MuAttribute.html",
    "title": "Struct MuAttribute | Pinemach.Muml",
    "summary": "Struct MuAttribute Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Represents an attribute belonging to a MuElement. An attribute is fundamentally a key, value pair. public struct MuAttribute Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors MuAttribute(string?) public MuAttribute(string? name) Parameters name string MuAttribute(string?, string?) public MuAttribute(string? name, string? value) Parameters name string value string Fields Name public string? Name Field Value string Value public string? Value Field Value string Methods AsBool() Get the attribute's value, coerced to a boolean. public bool AsBool() Returns bool AsDouble() Get the attribute's value, coerced to a double. public double AsDouble() Returns double AsInt32() Get the attribute's value, coerced to an int. public int AsInt32() Returns int AsInt64() Get the attribute's value, coerced to a long. public long AsInt64() Returns long AsSingle() Get the attribute's value, coerced to a float. public float AsSingle() Returns float AsString() Get the attribute's value as a string. No coercion necessary. public string? AsString() Returns string Equals(MuAttribute) public bool Equals(MuAttribute attr) Parameters attr MuAttribute Returns bool Equals(KeyValuePair<string?, string?>) public bool Equals(KeyValuePair<string?, string?> attr) Parameters attr KeyValuePair<string, string> Returns bool Equals(object?) Indicates whether this instance and a specified object are equal. public override bool Equals(object? obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. Equals(string?, string?) public bool Equals(string? name, string? value) Parameters name string value string Returns bool GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. HasValue() public bool HasValue() Returns bool ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(MuAttribute, MuAttribute) public static bool operator ==(MuAttribute left, MuAttribute right) Parameters left MuAttribute right MuAttribute Returns bool implicit operator KeyValuePair<string?, string?>(MuAttribute) public static implicit operator KeyValuePair<string?, string?>(MuAttribute attr) Parameters attr MuAttribute Returns KeyValuePair<string, string> implicit operator (string?, string?)(MuAttribute) public static implicit operator (string?, string?)(MuAttribute attr) Parameters attr MuAttribute Returns (string, string) operator !=(MuAttribute, MuAttribute) public static bool operator !=(MuAttribute left, MuAttribute right) Parameters left MuAttribute right MuAttribute Returns bool"
  },
  "api/Pinemach.Muml.MuAttributes.html": {
    "href": "api/Pinemach.Muml.MuAttributes.html",
    "title": "Class MuAttributes | Pinemach.Muml",
    "summary": "Class MuAttributes Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Represents a list of attributes belonging to a MuElement. public class MuAttributes : List<MuAttribute>, IList<MuAttribute>, ICollection<MuAttribute>, IReadOnlyList<MuAttribute>, IReadOnlyCollection<MuAttribute>, IEnumerable<MuAttribute>, IList, ICollection, IEnumerable Inheritance object List<MuAttribute> MuAttributes Implements IList<MuAttribute> ICollection<MuAttribute> IReadOnlyList<MuAttribute> IReadOnlyCollection<MuAttribute> IEnumerable<MuAttribute> IList ICollection IEnumerable Inherited Members List<MuAttribute>.Add(MuAttribute) List<MuAttribute>.AddRange(IEnumerable<MuAttribute>) List<MuAttribute>.AsReadOnly() List<MuAttribute>.BinarySearch(int, int, MuAttribute, IComparer<MuAttribute>) List<MuAttribute>.BinarySearch(MuAttribute) List<MuAttribute>.BinarySearch(MuAttribute, IComparer<MuAttribute>) List<MuAttribute>.Clear() List<MuAttribute>.Contains(MuAttribute) List<MuAttribute>.ConvertAll<TOutput>(Converter<MuAttribute, TOutput>) List<MuAttribute>.CopyTo(int, MuAttribute[], int, int) List<MuAttribute>.CopyTo(MuAttribute[]) List<MuAttribute>.CopyTo(MuAttribute[], int) List<MuAttribute>.EnsureCapacity(int) List<MuAttribute>.Exists(Predicate<MuAttribute>) List<MuAttribute>.Find(Predicate<MuAttribute>) List<MuAttribute>.FindAll(Predicate<MuAttribute>) List<MuAttribute>.FindIndex(int, int, Predicate<MuAttribute>) List<MuAttribute>.FindIndex(int, Predicate<MuAttribute>) List<MuAttribute>.FindIndex(Predicate<MuAttribute>) List<MuAttribute>.FindLast(Predicate<MuAttribute>) List<MuAttribute>.FindLastIndex(int, int, Predicate<MuAttribute>) List<MuAttribute>.FindLastIndex(int, Predicate<MuAttribute>) List<MuAttribute>.FindLastIndex(Predicate<MuAttribute>) List<MuAttribute>.ForEach(Action<MuAttribute>) List<MuAttribute>.GetEnumerator() List<MuAttribute>.GetRange(int, int) List<MuAttribute>.IndexOf(MuAttribute) List<MuAttribute>.IndexOf(MuAttribute, int) List<MuAttribute>.IndexOf(MuAttribute, int, int) List<MuAttribute>.Insert(int, MuAttribute) List<MuAttribute>.InsertRange(int, IEnumerable<MuAttribute>) List<MuAttribute>.LastIndexOf(MuAttribute) List<MuAttribute>.LastIndexOf(MuAttribute, int) List<MuAttribute>.LastIndexOf(MuAttribute, int, int) List<MuAttribute>.Remove(MuAttribute) List<MuAttribute>.RemoveAll(Predicate<MuAttribute>) List<MuAttribute>.RemoveAt(int) List<MuAttribute>.RemoveRange(int, int) List<MuAttribute>.Reverse() List<MuAttribute>.Reverse(int, int) List<MuAttribute>.Sort() List<MuAttribute>.Sort(IComparer<MuAttribute>) List<MuAttribute>.Sort(Comparison<MuAttribute>) List<MuAttribute>.Sort(int, int, IComparer<MuAttribute>) List<MuAttribute>.ToArray() List<MuAttribute>.TrimExcess() List<MuAttribute>.TrueForAll(Predicate<MuAttribute>) List<MuAttribute>.Capacity List<MuAttribute>.Count List<MuAttribute>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MuAttributes() public MuAttributes() MuAttributes(IEnumerable<MuAttribute>) public MuAttributes(IEnumerable<MuAttribute> collection) Parameters collection IEnumerable<MuAttribute> MuAttributes(IEnumerable<KeyValuePair<string?, string?>>) public MuAttributes(IEnumerable<KeyValuePair<string?, string?>> collection) Parameters collection IEnumerable<KeyValuePair<string, string>> MuAttributes(int) public MuAttributes(int capacity) Parameters capacity int Methods Add(KeyValuePair<string?, string?>) Add a new attribute to the list. public void Add(KeyValuePair<string?, string?> attr) Parameters attr KeyValuePair<string, string> Add(string?) Add a new attribute to the list. public void Add(string? name) Parameters name string Add(string?, string?) Add a new attribute to the list. public void Add(string? name, string? value) Parameters name string value string AddRange(IEnumerable<KeyValuePair<string?, string?>>) Add new attributes to the list. public void AddRange(IEnumerable<KeyValuePair<string?, string?>> attrs) Parameters attrs IEnumerable<KeyValuePair<string, string>> ContainsName(string?) Check whether the list contains any attribute with a given name. public bool ContainsName(string? name) Parameters name string Returns bool From(IEnumerable<MuAttribute>?) Initialize MuAttributes from attributes. public static MuAttributes From(IEnumerable<MuAttribute>? attrs) Parameters attrs IEnumerable<MuAttribute> Returns MuAttributes From(IEnumerable<KeyValuePair<string?, string?>>?) Initialize MuAttributes from key, value pairs. public static MuAttributes From(IEnumerable<KeyValuePair<string?, string?>>? attrs) Parameters attrs IEnumerable<KeyValuePair<string, string>> Returns MuAttributes GetAllValues(string?) Get an enumerable of all values of attributes with matching names. public IEnumerable<string?> GetAllValues(string? name) Parameters name string Returns IEnumerable<string> GetDictionary() Get a Dictionary representation of this attribute list. The first instance of an attribute with any given name will be included in the returned Dictionary. public Dictionary<string, string?> GetDictionary() Returns Dictionary<string, string> GetValue(string?) Get the value of the first attribute with a matching name. Returns null when there was no matching attribute. public string? GetValue(string? name) Parameters name string Returns string GetValue(string?, string?) Get the value of the first attribute with a matching name. Returns the fallback value when there was no matching attribute. public string? GetValue(string? name, string? fallback) Parameters name string fallback string Returns string IndexOf(string?) Get the index of the first attribute with a matching name. Returns -1 when there was no matching attribute. public int IndexOf(string? name) Parameters name string Returns int LastIndexOf(string?) Get the index of the last attribute with a matching name. Returns -1 when there was no matching attribute. public int LastIndexOf(string? name) Parameters name string Returns int Set(string?, string?) Assign an attribute value. If there is any existing attribute with a matching name, then overwrite the value of the first matching attribute. If not, then add a new attribute with the given name and value. public void Set(string? name, string? value) Parameters name string value string ToString() Get a Muml representation of this attribute list. public override string ToString() Returns string TryGetValue(string?, out string?) Get the value of the first attribute with a matching name. public bool TryGetValue(string? name, out string? value) Parameters name string value string Returns bool"
  },
  "api/Pinemach.Muml.MuDocument.html": {
    "href": "api/Pinemach.Muml.MuDocument.html",
    "title": "Class MuDocument | Pinemach.Muml",
    "summary": "Class MuDocument Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Represents a Muml document, typically corresponding to a single file. A document is a collection of one or more top-level Muml elements, plus optional header content. public class MuDocument : IMuHasValues, IMuHasMembers Inheritance object MuDocument Implements IMuHasValues IMuHasMembers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MuHasMembersExtensions.HasMembers(IMuHasMembers) MuHasValuesExtensions.GetFirstValue(IMuHasValues) MuHasValuesExtensions.GetLastValue(IMuHasValues) MuHasValuesExtensions.HasValues(IMuHasValues) MuHasValuesExtensions.TryGetFirstValue(IMuHasValues, out string?) MuHasValuesExtensions.TryGetLastValue(IMuHasValues, out string?) Constructors MuDocument() public MuDocument() MuDocument(MuSourceErrors) public MuDocument(MuSourceErrors errors) Parameters errors MuSourceErrors MuDocument(string?, IEnumerable<string>?, IEnumerable<MuElement>?, IEnumerable<MuSourceError>?) public MuDocument(string? text = null, IEnumerable<string>? values = null, IEnumerable<MuElement>? members = null, IEnumerable<MuSourceError>? errors = null) Parameters text string values IEnumerable<string> members IEnumerable<MuElement> errors IEnumerable<MuSourceError> Fields Errors Error log object, representing errors which occurred while parsing this document. public readonly MuSourceErrors Errors Field Value MuSourceErrors Text public string? Text Field Value string Properties Members Members belonging to this object. In a document, members are all top-level elements. An element's members are enclosed within curly braces. public MuMembers Members { get; set; } Property Value MuMembers Values Values belonging to this object. Values are text preceded with an equals sign. public MuValues Values { get; set; } Property Value MuValues Methods ContentEquals(MuDocument?) Compare equality of the contents of this document with another. public bool ContentEquals(MuDocument? doc) Parameters doc MuDocument Returns bool ContentEquals(object) Compare equality of the contents of this document with another. public bool ContentEquals(object obj) Parameters obj object Returns bool HasText() Returns true if the document has non-null text. public bool HasText() Returns bool IsOk() Returns true when the document has no parse errors associated with it. public bool IsOk() Returns bool Load(string) Parse and produce a MuDocument given a Muml document file. public static MuDocument Load(string filePath) Parameters filePath string Returns MuDocument Load(string, Encoding) Parse and produce a MuDocument given a Muml document file. public static MuDocument Load(string filePath, Encoding encoding) Parameters filePath string encoding Encoding Returns MuDocument Parse(TextReader) Parse and produce a MuDocument given a Muml source. public static MuDocument Parse(TextReader reader) Parameters reader TextReader Returns MuDocument Parse(string) Parse and produce a MuDocument given a Muml source. public static MuDocument Parse(string source) Parameters source string Returns MuDocument Parse(string?, TextReader) Parse and produce a MuDocument given a Muml source. public static MuDocument Parse(string? fileName, TextReader reader) Parameters fileName string reader TextReader Returns MuDocument Parse(string?, string) Parse and produce a MuDocument given a Muml source. public static MuDocument Parse(string? fileName, string source) Parameters fileName string source string Returns MuDocument Save(TextWriter) Encode the document as Muml and write it to a destination. public void Save(TextWriter textWriter) Parameters textWriter TextWriter Save(TextWriter, MuWriter) Encode the document as Muml and write it to a destination. public void Save(TextWriter textWriter, MuWriter mumlWriter) Parameters textWriter TextWriter mumlWriter MuWriter Save(string) Encode the document as Muml and write it to a destination. public void Save(string path) Parameters path string Save(string, MuWriter) Encode the document as Muml and write it to a destination. public void Save(string path, MuWriter mumlWriter) Parameters path string mumlWriter MuWriter ToString() Get a Muml representation of this document. public override string ToString() Returns string ToString(MuWriter) Get a Muml representation of this document, using the settings of a given MuWriter. public string ToString(MuWriter writer) Parameters writer MuWriter Returns string"
  },
  "api/Pinemach.Muml.MuDocumentContentComparer.html": {
    "href": "api/Pinemach.Muml.MuDocumentContentComparer.html",
    "title": "Class MuDocumentContentComparer | Pinemach.Muml",
    "summary": "Class MuDocumentContentComparer Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Comparer which checks equality of document content. public class MuDocumentContentComparer : IEqualityComparer<MuDocument> Inheritance object MuDocumentContentComparer Implements IEqualityComparer<MuDocument> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MuDocumentContentComparer() public MuDocumentContentComparer() Fields Instance Singleton instance. public static readonly MuDocumentContentComparer Instance Field Value MuDocumentContentComparer Methods Equals(MuDocument?, MuDocument?) Determines whether the specified objects are equal. public bool Equals(MuDocument? doc1, MuDocument? doc2) Parameters doc1 MuDocument doc2 MuDocument Returns bool true if the specified objects are equal; otherwise, false. GetHashCode(MuDocument) Returns a hash code for the specified object. public int GetHashCode(MuDocument doc) Parameters doc MuDocument Returns int A hash code for the specified object. Exceptions ArgumentNullException The type of obj is a reference type and obj is null."
  },
  "api/Pinemach.Muml.MuElement.html": {
    "href": "api/Pinemach.Muml.MuElement.html",
    "title": "Class MuElement | Pinemach.Muml",
    "summary": "Class MuElement Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Represents an element within a Muml document. Elements are the fundamental unit of structure and data within a document. name=value \"text\" [attrName=attrValue] {memberName} public class MuElement : IMuHasValues, IMuHasAttributes, IMuHasMembers Inheritance object MuElement Implements IMuHasValues IMuHasAttributes IMuHasMembers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods MuHasAttributesExtensions.HasAttributes(IMuHasAttributes) MuHasMembersExtensions.HasMembers(IMuHasMembers) MuHasValuesExtensions.GetFirstValue(IMuHasValues) MuHasValuesExtensions.GetLastValue(IMuHasValues) MuHasValuesExtensions.HasValues(IMuHasValues) MuHasValuesExtensions.TryGetFirstValue(IMuHasValues, out string?) MuHasValuesExtensions.TryGetLastValue(IMuHasValues, out string?) Constructors MuElement() public MuElement() MuElement(MuSourceSpan, string, string?, IEnumerable<string>?, IEnumerable<MuAttribute>?, IEnumerable<MuElement>?) public MuElement(MuSourceSpan sourceSpan, string name, string? text = null, IEnumerable<string>? values = null, IEnumerable<MuAttribute>? attributes = null, IEnumerable<MuElement>? members = null) Parameters sourceSpan MuSourceSpan name string text string values IEnumerable<string> attributes IEnumerable<MuAttribute> members IEnumerable<MuElement> MuElement(string, string?, IEnumerable<string>?, IEnumerable<MuAttribute>?, IEnumerable<MuElement>?) public MuElement(string name, string? text = null, IEnumerable<string>? values = null, IEnumerable<MuAttribute>? attributes = null, IEnumerable<MuElement>? members = null) Parameters name string text string values IEnumerable<string> attributes IEnumerable<MuAttribute> members IEnumerable<MuElement> Fields Name public string Name Field Value string SourceSpan public MuSourceSpan SourceSpan Field Value MuSourceSpan Text public string? Text Field Value string Properties Attributes Attributes belonging to this object. Attributes are key, value pairs, with non-unique keys. public MuAttributes Attributes { get; set; } Property Value MuAttributes Members Members belonging to this object. In a document, members are all top-level elements. An element's members are enclosed within curly braces. public MuMembers Members { get; set; } Property Value MuMembers Values Values belonging to this object. Values are text preceded with an equals sign. public MuValues Values { get; set; } Property Value MuValues Methods ContentEquals(MuElement?) Compare equality of the contents of this element with another. public bool ContentEquals(MuElement? el) Parameters el MuElement Returns bool ContentEquals(object) Compare equality of the contents of this element with another. public bool ContentEquals(object obj) Parameters obj object Returns bool HasIdentifierName() Returns true when this element's name is possible to represent as a plain identifier string. Otherwise, the element's name can only be represented using a braced identifier. public bool HasIdentifierName() Returns bool HasText() Returns true if the element has non-null text. public bool HasText() Returns bool ToString() Get a Muml representation of this element. public override string ToString() Returns string"
  },
  "api/Pinemach.Muml.MuElementContentComparer.html": {
    "href": "api/Pinemach.Muml.MuElementContentComparer.html",
    "title": "Class MuElementContentComparer | Pinemach.Muml",
    "summary": "Class MuElementContentComparer Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Comparer which checks equality of element content. public class MuElementContentComparer : IEqualityComparer<MuElement> Inheritance object MuElementContentComparer Implements IEqualityComparer<MuElement> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MuElementContentComparer() public MuElementContentComparer() Fields Instance Singleton instance. public static readonly MuElementContentComparer Instance Field Value MuElementContentComparer Methods Equals(MuElement?, MuElement?) Determines whether the specified objects are equal. public bool Equals(MuElement? el1, MuElement? el2) Parameters el1 MuElement el2 MuElement Returns bool true if the specified objects are equal; otherwise, false. GetHashCode(MuElement) Returns a hash code for the specified object. public int GetHashCode(MuElement el) Parameters el MuElement Returns int A hash code for the specified object. Exceptions ArgumentNullException The type of obj is a reference type and obj is null."
  },
  "api/Pinemach.Muml.MuHasAttributesExtensions.html": {
    "href": "api/Pinemach.Muml.MuHasAttributesExtensions.html",
    "title": "Class MuHasAttributesExtensions | Pinemach.Muml",
    "summary": "Class MuHasAttributesExtensions Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Extension methods for MuElement objects. public static class MuHasAttributesExtensions Inheritance object MuHasAttributesExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods HasAttributes(IMuHasAttributes) Returns true when the object has at least one attribute. public static bool HasAttributes(this IMuHasAttributes obj) Parameters obj IMuHasAttributes Returns bool"
  },
  "api/Pinemach.Muml.MuHasMembersExtensions.html": {
    "href": "api/Pinemach.Muml.MuHasMembersExtensions.html",
    "title": "Class MuHasMembersExtensions | Pinemach.Muml",
    "summary": "Class MuHasMembersExtensions Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Extension methods for MuDocument and MuElement objects. public static class MuHasMembersExtensions Inheritance object MuHasMembersExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods HasMembers(IMuHasMembers) Returns true when the object has at least one member. public static bool HasMembers(this IMuHasMembers obj) Parameters obj IMuHasMembers Returns bool"
  },
  "api/Pinemach.Muml.MuHasValuesExtensions.html": {
    "href": "api/Pinemach.Muml.MuHasValuesExtensions.html",
    "title": "Class MuHasValuesExtensions | Pinemach.Muml",
    "summary": "Class MuHasValuesExtensions Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Extension methods for MuDocument and MuElement objects. public static class MuHasValuesExtensions Inheritance object MuHasValuesExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetFirstValue(IMuHasValues) public static string? GetFirstValue(this IMuHasValues obj) Parameters obj IMuHasValues Returns string GetLastValue(IMuHasValues) public static string? GetLastValue(this IMuHasValues obj) Parameters obj IMuHasValues Returns string HasValues(IMuHasValues) Returns true when the object has at least one value. public static bool HasValues(this IMuHasValues obj) Parameters obj IMuHasValues Returns bool TryGetFirstValue(IMuHasValues, out string?) public static bool TryGetFirstValue(this IMuHasValues obj, out string? value) Parameters obj IMuHasValues value string Returns bool TryGetLastValue(IMuHasValues, out string?) public static bool TryGetLastValue(this IMuHasValues obj, out string? value) Parameters obj IMuHasValues value string Returns bool"
  },
  "api/Pinemach.Muml.MuMembers.html": {
    "href": "api/Pinemach.Muml.MuMembers.html",
    "title": "Class MuMembers | Pinemach.Muml",
    "summary": "Class MuMembers Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Represents a list of member elements associated with a MuElement or MuDocument. public class MuMembers : List<MuElement>, IList<MuElement>, ICollection<MuElement>, IReadOnlyList<MuElement>, IReadOnlyCollection<MuElement>, IEnumerable<MuElement>, IList, ICollection, IEnumerable Inheritance object List<MuElement> MuMembers Implements IList<MuElement> ICollection<MuElement> IReadOnlyList<MuElement> IReadOnlyCollection<MuElement> IEnumerable<MuElement> IList ICollection IEnumerable Inherited Members List<MuElement>.Add(MuElement) List<MuElement>.AddRange(IEnumerable<MuElement>) List<MuElement>.AsReadOnly() List<MuElement>.BinarySearch(int, int, MuElement, IComparer<MuElement>) List<MuElement>.BinarySearch(MuElement) List<MuElement>.BinarySearch(MuElement, IComparer<MuElement>) List<MuElement>.Clear() List<MuElement>.Contains(MuElement) List<MuElement>.ConvertAll<TOutput>(Converter<MuElement, TOutput>) List<MuElement>.CopyTo(int, MuElement[], int, int) List<MuElement>.CopyTo(MuElement[]) List<MuElement>.CopyTo(MuElement[], int) List<MuElement>.EnsureCapacity(int) List<MuElement>.Exists(Predicate<MuElement>) List<MuElement>.Find(Predicate<MuElement>) List<MuElement>.FindAll(Predicate<MuElement>) List<MuElement>.FindIndex(int, int, Predicate<MuElement>) List<MuElement>.FindIndex(int, Predicate<MuElement>) List<MuElement>.FindIndex(Predicate<MuElement>) List<MuElement>.FindLast(Predicate<MuElement>) List<MuElement>.FindLastIndex(int, int, Predicate<MuElement>) List<MuElement>.FindLastIndex(int, Predicate<MuElement>) List<MuElement>.FindLastIndex(Predicate<MuElement>) List<MuElement>.ForEach(Action<MuElement>) List<MuElement>.GetEnumerator() List<MuElement>.GetRange(int, int) List<MuElement>.IndexOf(MuElement) List<MuElement>.IndexOf(MuElement, int) List<MuElement>.IndexOf(MuElement, int, int) List<MuElement>.Insert(int, MuElement) List<MuElement>.InsertRange(int, IEnumerable<MuElement>) List<MuElement>.LastIndexOf(MuElement) List<MuElement>.LastIndexOf(MuElement, int) List<MuElement>.LastIndexOf(MuElement, int, int) List<MuElement>.Remove(MuElement) List<MuElement>.RemoveAll(Predicate<MuElement>) List<MuElement>.RemoveAt(int) List<MuElement>.RemoveRange(int, int) List<MuElement>.Reverse() List<MuElement>.Reverse(int, int) List<MuElement>.Sort() List<MuElement>.Sort(IComparer<MuElement>) List<MuElement>.Sort(Comparison<MuElement>) List<MuElement>.Sort(int, int, IComparer<MuElement>) List<MuElement>.ToArray() List<MuElement>.TrimExcess() List<MuElement>.TrueForAll(Predicate<MuElement>) List<MuElement>.Capacity List<MuElement>.Count List<MuElement>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MuMembers() public MuMembers() MuMembers(IEnumerable<MuElement>) public MuMembers(IEnumerable<MuElement> collection) Parameters collection IEnumerable<MuElement> MuMembers(int) public MuMembers(int capacity) Parameters capacity int Methods EnumerateTreeBreadthFirst() Enumerate all elements in a tree, breadth-first. public IEnumerable<MuElement> EnumerateTreeBreadthFirst() Returns IEnumerable<MuElement> EnumerateTreeBreadthFirst(MuElement?) Enumerate all elements in a tree, breadth-first. public IEnumerable<MuElement> EnumerateTreeBreadthFirst(MuElement? elRoot) Parameters elRoot MuElement Returns IEnumerable<MuElement> EnumerateTreeDepthFirst() Enumerate all elements in a tree, depth-first. public IEnumerable<MuElement> EnumerateTreeDepthFirst() Returns IEnumerable<MuElement> EnumerateTreeDepthFirst(MuElement?) Enumerate all elements in a tree, depth-first. public IEnumerable<MuElement> EnumerateTreeDepthFirst(MuElement? elRoot) Parameters elRoot MuElement Returns IEnumerable<MuElement> From(IEnumerable<MuElement>?) Initialize MuMembers from elements. public static MuMembers From(IEnumerable<MuElement>? members) Parameters members IEnumerable<MuElement> Returns MuMembers GetDepth() Get the greatest depth of the element tree. This is a potentially expensive operation! It involves traversing the entire element tree. public int GetDepth() Returns int ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Pinemach.Muml.MuParser.html": {
    "href": "api/Pinemach.Muml.MuParser.html",
    "title": "Class MuParser | Pinemach.Muml",
    "summary": "Class MuParser Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Implements a parser which takes Muml source in and outputs a corresponding MuDocument object. public class MuParser : IDisposable Inheritance object MuParser Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MuParser(MuTokenizer) public MuParser(MuTokenizer tokenizer) Parameters tokenizer MuTokenizer MuParser(TextReader) public MuParser(TextReader reader) Parameters reader TextReader MuParser(string) public MuParser(string source) Parameters source string MuParser(string?, TextReader) public MuParser(string? fileName, TextReader reader) Parameters fileName string reader TextReader MuParser(string?, string) public MuParser(string? fileName, string source) Parameters fileName string source string Fields Document Document object constructed from the parsed Muml input. public readonly MuDocument Document Field Value MuDocument Errors Error log object, to which parsing errors are added. public readonly MuSourceErrors Errors Field Value MuSourceErrors Methods Dispose() Dispose of the tokenizer's underlying TextReader object. public void Dispose() IsOk() Returns true when the parser has no errors associated with it. public bool IsOk() Returns bool Parse() Parse tokens in the source text until finished. public void Parse() ParseNextToken() Parse and handle the immediate next token in the source text. public bool ParseNextToken() Returns bool"
  },
  "api/Pinemach.Muml.MuSourceError.html": {
    "href": "api/Pinemach.Muml.MuSourceError.html",
    "title": "Struct MuSourceError | Pinemach.Muml",
    "summary": "Struct MuSourceError Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Represents an error encountered while parsing Muml source. public readonly struct MuSourceError : IComparable Implements IComparable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors MuSourceError(MuSourceErrorType, MuSourceLocation) public MuSourceError(MuSourceErrorType type, MuSourceLocation location) Parameters type MuSourceErrorType location MuSourceLocation MuSourceError(MuSourceErrorType, MuSourceSpan) public MuSourceError(MuSourceErrorType type, MuSourceSpan span) Parameters type MuSourceErrorType span MuSourceSpan Fields None public static readonly MuSourceError None Field Value MuSourceError Span public readonly MuSourceSpan Span Field Value MuSourceSpan Type public readonly MuSourceErrorType Type Field Value MuSourceErrorType Properties Location public MuSourceLocation Location { get; } Property Value MuSourceLocation Methods CompareTo(MuSourceError) public int CompareTo(MuSourceError error) Parameters error MuSourceError Returns int CompareTo(object?) Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. public int CompareTo(object? obj) Parameters obj object An object to compare with this instance. Returns int A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes obj in the sort order. Zero This instance occurs in the same position in the sort order as obj. Greater than zero This instance follows obj in the sort order. Exceptions ArgumentException obj is not the same type as this instance. ExpectedStringAfterFormatSpecifier(MuSourceLocation) public static MuSourceError ExpectedStringAfterFormatSpecifier(MuSourceLocation loc) Parameters loc MuSourceLocation Returns MuSourceError ExpectedStringAfterFormatSpecifier(MuSourceSpan) public static MuSourceError ExpectedStringAfterFormatSpecifier(MuSourceSpan span) Parameters span MuSourceSpan Returns MuSourceError ExpectedValueAfterEquals(MuSourceLocation) public static MuSourceError ExpectedValueAfterEquals(MuSourceLocation loc) Parameters loc MuSourceLocation Returns MuSourceError ExpectedValueAfterEquals(MuSourceSpan) public static MuSourceError ExpectedValueAfterEquals(MuSourceSpan span) Parameters span MuSourceSpan Returns MuSourceError MalformedBracesIdentifier(MuSourceLocation) public static MuSourceError MalformedBracesIdentifier(MuSourceLocation loc) Parameters loc MuSourceLocation Returns MuSourceError MalformedBracesIdentifier(MuSourceSpan) public static MuSourceError MalformedBracesIdentifier(MuSourceSpan span) Parameters span MuSourceSpan Returns MuSourceError MalformedStringEscapeSequence(MuSourceLocation) public static MuSourceError MalformedStringEscapeSequence(MuSourceLocation loc) Parameters loc MuSourceLocation Returns MuSourceError MalformedStringEscapeSequence(MuSourceSpan) public static MuSourceError MalformedStringEscapeSequence(MuSourceSpan span) Parameters span MuSourceSpan Returns MuSourceError ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. TypeToString(MuSourceErrorType) Get a string representation of a MuSourceErrorType. public static string? TypeToString(MuSourceErrorType type) Parameters type MuSourceErrorType Returns string UnexpectedCharacter(MuSourceLocation) public static MuSourceError UnexpectedCharacter(MuSourceLocation loc) Parameters loc MuSourceLocation Returns MuSourceError UnexpectedCharacter(MuSourceSpan) public static MuSourceError UnexpectedCharacter(MuSourceSpan span) Parameters span MuSourceSpan Returns MuSourceError UnexpectedCloseBrace(MuSourceLocation) public static MuSourceError UnexpectedCloseBrace(MuSourceLocation loc) Parameters loc MuSourceLocation Returns MuSourceError UnexpectedCloseBrace(MuSourceSpan) public static MuSourceError UnexpectedCloseBrace(MuSourceSpan span) Parameters span MuSourceSpan Returns MuSourceError UnexpectedCloseBracket(MuSourceLocation) public static MuSourceError UnexpectedCloseBracket(MuSourceLocation loc) Parameters loc MuSourceLocation Returns MuSourceError UnexpectedCloseBracket(MuSourceSpan) public static MuSourceError UnexpectedCloseBracket(MuSourceSpan span) Parameters span MuSourceSpan Returns MuSourceError UnexpectedEquals(MuSourceLocation) public static MuSourceError UnexpectedEquals(MuSourceLocation loc) Parameters loc MuSourceLocation Returns MuSourceError UnexpectedEquals(MuSourceSpan) public static MuSourceError UnexpectedEquals(MuSourceSpan span) Parameters span MuSourceSpan Returns MuSourceError UnexpectedNewlineInStringLiteral(MuSourceLocation) public static MuSourceError UnexpectedNewlineInStringLiteral(MuSourceLocation loc) Parameters loc MuSourceLocation Returns MuSourceError UnexpectedNewlineInStringLiteral(MuSourceSpan) public static MuSourceError UnexpectedNewlineInStringLiteral(MuSourceSpan span) Parameters span MuSourceSpan Returns MuSourceError UnexpectedOpenBrace(MuSourceLocation) public static MuSourceError UnexpectedOpenBrace(MuSourceLocation loc) Parameters loc MuSourceLocation Returns MuSourceError UnexpectedOpenBrace(MuSourceSpan) public static MuSourceError UnexpectedOpenBrace(MuSourceSpan span) Parameters span MuSourceSpan Returns MuSourceError UnexpectedOpenBracket(MuSourceLocation) public static MuSourceError UnexpectedOpenBracket(MuSourceLocation loc) Parameters loc MuSourceLocation Returns MuSourceError UnexpectedOpenBracket(MuSourceSpan) public static MuSourceError UnexpectedOpenBracket(MuSourceSpan span) Parameters span MuSourceSpan Returns MuSourceError UnexpectedStringLiteral(MuSourceLocation) public static MuSourceError UnexpectedStringLiteral(MuSourceLocation loc) Parameters loc MuSourceLocation Returns MuSourceError UnexpectedStringLiteral(MuSourceSpan) public static MuSourceError UnexpectedStringLiteral(MuSourceSpan span) Parameters span MuSourceSpan Returns MuSourceError UnterminatedAttributes(MuSourceLocation) public static MuSourceError UnterminatedAttributes(MuSourceLocation loc) Parameters loc MuSourceLocation Returns MuSourceError UnterminatedAttributes(MuSourceSpan) public static MuSourceError UnterminatedAttributes(MuSourceSpan span) Parameters span MuSourceSpan Returns MuSourceError UnterminatedMembers(MuSourceLocation) public static MuSourceError UnterminatedMembers(MuSourceLocation loc) Parameters loc MuSourceLocation Returns MuSourceError UnterminatedMembers(MuSourceSpan) public static MuSourceError UnterminatedMembers(MuSourceSpan span) Parameters span MuSourceSpan Returns MuSourceError UnterminatedNestedBlockComment(MuSourceLocation) public static MuSourceError UnterminatedNestedBlockComment(MuSourceLocation loc) Parameters loc MuSourceLocation Returns MuSourceError UnterminatedNestedBlockComment(MuSourceSpan) public static MuSourceError UnterminatedNestedBlockComment(MuSourceSpan span) Parameters span MuSourceSpan Returns MuSourceError UnterminatedStringLiteral(MuSourceLocation) public static MuSourceError UnterminatedStringLiteral(MuSourceLocation loc) Parameters loc MuSourceLocation Returns MuSourceError UnterminatedStringLiteral(MuSourceSpan) public static MuSourceError UnterminatedStringLiteral(MuSourceSpan span) Parameters span MuSourceSpan Returns MuSourceError"
  },
  "api/Pinemach.Muml.MuSourceErrorType.html": {
    "href": "api/Pinemach.Muml.MuSourceErrorType.html",
    "title": "Enum MuSourceErrorType | Pinemach.Muml",
    "summary": "Enum MuSourceErrorType Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Enumeration of possible errors that may occur when dealing with Muml source text. public enum MuSourceErrorType Fields ExpectedStringAfterFormatSpecifier = 15 ExpectedValueAfterEquals = 16 MalformedBracesIdentifier = 13 MalformedStringEscapeSequence = 14 None = 0 UnexpectedCharacter = 1 UnexpectedCloseBrace = 5 UnexpectedCloseBracket = 4 UnexpectedEquals = 6 UnexpectedNewlineInStringLiteral = 8 UnexpectedOpenBrace = 3 UnexpectedOpenBracket = 2 UnexpectedStringLiteral = 7 UnterminatedAttributes = 11 UnterminatedMembers = 12 UnterminatedNestedBlockComment = 10 UnterminatedStringLiteral = 9"
  },
  "api/Pinemach.Muml.MuSourceErrors.html": {
    "href": "api/Pinemach.Muml.MuSourceErrors.html",
    "title": "Class MuSourceErrors | Pinemach.Muml",
    "summary": "Class MuSourceErrors Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Represents the list of errors encountered while parsing Muml source. public class MuSourceErrors : List<MuSourceError>, IList<MuSourceError>, ICollection<MuSourceError>, IReadOnlyList<MuSourceError>, IReadOnlyCollection<MuSourceError>, IEnumerable<MuSourceError>, IList, ICollection, IEnumerable Inheritance object List<MuSourceError> MuSourceErrors Implements IList<MuSourceError> ICollection<MuSourceError> IReadOnlyList<MuSourceError> IReadOnlyCollection<MuSourceError> IEnumerable<MuSourceError> IList ICollection IEnumerable Inherited Members List<MuSourceError>.Add(MuSourceError) List<MuSourceError>.AddRange(IEnumerable<MuSourceError>) List<MuSourceError>.AsReadOnly() List<MuSourceError>.BinarySearch(int, int, MuSourceError, IComparer<MuSourceError>) List<MuSourceError>.BinarySearch(MuSourceError) List<MuSourceError>.BinarySearch(MuSourceError, IComparer<MuSourceError>) List<MuSourceError>.Clear() List<MuSourceError>.Contains(MuSourceError) List<MuSourceError>.ConvertAll<TOutput>(Converter<MuSourceError, TOutput>) List<MuSourceError>.CopyTo(int, MuSourceError[], int, int) List<MuSourceError>.CopyTo(MuSourceError[]) List<MuSourceError>.CopyTo(MuSourceError[], int) List<MuSourceError>.EnsureCapacity(int) List<MuSourceError>.Exists(Predicate<MuSourceError>) List<MuSourceError>.Find(Predicate<MuSourceError>) List<MuSourceError>.FindAll(Predicate<MuSourceError>) List<MuSourceError>.FindIndex(int, int, Predicate<MuSourceError>) List<MuSourceError>.FindIndex(int, Predicate<MuSourceError>) List<MuSourceError>.FindIndex(Predicate<MuSourceError>) List<MuSourceError>.FindLast(Predicate<MuSourceError>) List<MuSourceError>.FindLastIndex(int, int, Predicate<MuSourceError>) List<MuSourceError>.FindLastIndex(int, Predicate<MuSourceError>) List<MuSourceError>.FindLastIndex(Predicate<MuSourceError>) List<MuSourceError>.ForEach(Action<MuSourceError>) List<MuSourceError>.GetEnumerator() List<MuSourceError>.GetRange(int, int) List<MuSourceError>.IndexOf(MuSourceError) List<MuSourceError>.IndexOf(MuSourceError, int) List<MuSourceError>.IndexOf(MuSourceError, int, int) List<MuSourceError>.Insert(int, MuSourceError) List<MuSourceError>.InsertRange(int, IEnumerable<MuSourceError>) List<MuSourceError>.LastIndexOf(MuSourceError) List<MuSourceError>.LastIndexOf(MuSourceError, int) List<MuSourceError>.LastIndexOf(MuSourceError, int, int) List<MuSourceError>.Remove(MuSourceError) List<MuSourceError>.RemoveAll(Predicate<MuSourceError>) List<MuSourceError>.RemoveAt(int) List<MuSourceError>.RemoveRange(int, int) List<MuSourceError>.Reverse() List<MuSourceError>.Reverse(int, int) List<MuSourceError>.Sort() List<MuSourceError>.Sort(IComparer<MuSourceError>) List<MuSourceError>.Sort(Comparison<MuSourceError>) List<MuSourceError>.Sort(int, int, IComparer<MuSourceError>) List<MuSourceError>.ToArray() List<MuSourceError>.TrimExcess() List<MuSourceError>.TrueForAll(Predicate<MuSourceError>) List<MuSourceError>.Capacity List<MuSourceError>.Count List<MuSourceError>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MuSourceErrors() public MuSourceErrors() MuSourceErrors(IEnumerable<MuSourceError>) public MuSourceErrors(IEnumerable<MuSourceError> collection) Parameters collection IEnumerable<MuSourceError> MuSourceErrors(int) public MuSourceErrors(int capacity) Parameters capacity int Methods Add(MuSourceErrorType, MuSourceLocation) public void Add(MuSourceErrorType type, MuSourceLocation location) Parameters type MuSourceErrorType location MuSourceLocation Add(MuSourceErrorType, MuSourceSpan) public void Add(MuSourceErrorType type, MuSourceSpan span) Parameters type MuSourceErrorType span MuSourceSpan AddExpectedStringAfterFormatSpecifier(MuSourceLocation) public void AddExpectedStringAfterFormatSpecifier(MuSourceLocation loc) Parameters loc MuSourceLocation AddExpectedStringAfterFormatSpecifier(MuSourceSpan) public void AddExpectedStringAfterFormatSpecifier(MuSourceSpan span) Parameters span MuSourceSpan AddExpectedValueAfterEquals(MuSourceLocation) public void AddExpectedValueAfterEquals(MuSourceLocation loc) Parameters loc MuSourceLocation AddExpectedValueAfterEquals(MuSourceSpan) public void AddExpectedValueAfterEquals(MuSourceSpan span) Parameters span MuSourceSpan AddMalformedBracesIdentifier(MuSourceLocation) public void AddMalformedBracesIdentifier(MuSourceLocation loc) Parameters loc MuSourceLocation AddMalformedBracesIdentifier(MuSourceSpan) public void AddMalformedBracesIdentifier(MuSourceSpan span) Parameters span MuSourceSpan AddMalformedStringEscapeSequence(MuSourceLocation) public void AddMalformedStringEscapeSequence(MuSourceLocation loc) Parameters loc MuSourceLocation AddMalformedStringEscapeSequence(MuSourceSpan) public void AddMalformedStringEscapeSequence(MuSourceSpan span) Parameters span MuSourceSpan AddUnexpectedCharacter(MuSourceLocation) public void AddUnexpectedCharacter(MuSourceLocation loc) Parameters loc MuSourceLocation AddUnexpectedCharacter(MuSourceSpan) public void AddUnexpectedCharacter(MuSourceSpan span) Parameters span MuSourceSpan AddUnexpectedCloseBrace(MuSourceLocation) public void AddUnexpectedCloseBrace(MuSourceLocation loc) Parameters loc MuSourceLocation AddUnexpectedCloseBrace(MuSourceSpan) public void AddUnexpectedCloseBrace(MuSourceSpan span) Parameters span MuSourceSpan AddUnexpectedCloseBracket(MuSourceLocation) public void AddUnexpectedCloseBracket(MuSourceLocation loc) Parameters loc MuSourceLocation AddUnexpectedCloseBracket(MuSourceSpan) public void AddUnexpectedCloseBracket(MuSourceSpan span) Parameters span MuSourceSpan AddUnexpectedEquals(MuSourceLocation) public void AddUnexpectedEquals(MuSourceLocation loc) Parameters loc MuSourceLocation AddUnexpectedEquals(MuSourceSpan) public void AddUnexpectedEquals(MuSourceSpan span) Parameters span MuSourceSpan AddUnexpectedNewlineInStringLiteral(MuSourceLocation) public void AddUnexpectedNewlineInStringLiteral(MuSourceLocation loc) Parameters loc MuSourceLocation AddUnexpectedNewlineInStringLiteral(MuSourceSpan) public void AddUnexpectedNewlineInStringLiteral(MuSourceSpan span) Parameters span MuSourceSpan AddUnexpectedOpenBrace(MuSourceLocation) public void AddUnexpectedOpenBrace(MuSourceLocation loc) Parameters loc MuSourceLocation AddUnexpectedOpenBrace(MuSourceSpan) public void AddUnexpectedOpenBrace(MuSourceSpan span) Parameters span MuSourceSpan AddUnexpectedOpenBracket(MuSourceLocation) public void AddUnexpectedOpenBracket(MuSourceLocation loc) Parameters loc MuSourceLocation AddUnexpectedOpenBracket(MuSourceSpan) public void AddUnexpectedOpenBracket(MuSourceSpan span) Parameters span MuSourceSpan AddUnexpectedStringLiteral(MuSourceLocation) public void AddUnexpectedStringLiteral(MuSourceLocation loc) Parameters loc MuSourceLocation AddUnexpectedStringLiteral(MuSourceSpan) public void AddUnexpectedStringLiteral(MuSourceSpan span) Parameters span MuSourceSpan AddUnterminatedAttributes(MuSourceLocation) public void AddUnterminatedAttributes(MuSourceLocation loc) Parameters loc MuSourceLocation AddUnterminatedAttributes(MuSourceSpan) public void AddUnterminatedAttributes(MuSourceSpan span) Parameters span MuSourceSpan AddUnterminatedMembers(MuSourceLocation) public void AddUnterminatedMembers(MuSourceLocation loc) Parameters loc MuSourceLocation AddUnterminatedMembers(MuSourceSpan) public void AddUnterminatedMembers(MuSourceSpan span) Parameters span MuSourceSpan AddUnterminatedNestedBlockComment(MuSourceLocation) public void AddUnterminatedNestedBlockComment(MuSourceLocation loc) Parameters loc MuSourceLocation AddUnterminatedNestedBlockComment(MuSourceSpan) public void AddUnterminatedNestedBlockComment(MuSourceSpan span) Parameters span MuSourceSpan AddUnterminatedStringLiteral(MuSourceLocation) public void AddUnterminatedStringLiteral(MuSourceLocation loc) Parameters loc MuSourceLocation AddUnterminatedStringLiteral(MuSourceSpan) public void AddUnterminatedStringLiteral(MuSourceSpan span) Parameters span MuSourceSpan From(IEnumerable<MuSourceError>?) public static MuSourceErrors From(IEnumerable<MuSourceError>? errors) Parameters errors IEnumerable<MuSourceError> Returns MuSourceErrors IsLastErrorType(MuSourceErrorType) public bool IsLastErrorType(MuSourceErrorType type) Parameters type MuSourceErrorType Returns bool ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Pinemach.Muml.MuSourceLocation.html": {
    "href": "api/Pinemach.Muml.MuSourceLocation.html",
    "title": "Struct MuSourceLocation | Pinemach.Muml",
    "summary": "Struct MuSourceLocation Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Represents a single specific byte location within a source text. public struct MuSourceLocation Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors MuSourceLocation(int, int, int) public MuSourceLocation(int index, int lineStartIndex, int lineNumber) Parameters index int lineStartIndex int lineNumber int MuSourceLocation(string?) public MuSourceLocation(string? fileName) Parameters fileName string MuSourceLocation(string?, int, int, int) public MuSourceLocation(string? fileName, int index, int lineStartIndex, int lineNumber) Parameters fileName string index int lineStartIndex int lineNumber int Fields FileName public string? FileName Field Value string Index public int Index Field Value int LineNumber public int LineNumber Field Value int LineStartIndex public int LineStartIndex Field Value int None public static readonly MuSourceLocation None Field Value MuSourceLocation Properties ColumnNumber public int ColumnNumber { get; } Property Value int Methods Equals(MuSourceLocation) public bool Equals(MuSourceLocation loc) Parameters loc MuSourceLocation Returns bool Equals(object?) Indicates whether this instance and a specified object are equal. public override bool Equals(object? obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. IsValid() public bool IsValid() Returns bool SpanFrom(MuSourceLocation) public MuSourceSpan SpanFrom(MuSourceLocation start) Parameters start MuSourceLocation Returns MuSourceSpan SpanTo(MuSourceLocation) public MuSourceSpan SpanTo(MuSourceLocation end) Parameters end MuSourceLocation Returns MuSourceSpan ToLString() public string ToLString() Returns string ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator ==(MuSourceLocation, MuSourceLocation) public static bool operator ==(MuSourceLocation left, MuSourceLocation right) Parameters left MuSourceLocation right MuSourceLocation Returns bool operator !=(MuSourceLocation, MuSourceLocation) public static bool operator !=(MuSourceLocation left, MuSourceLocation right) Parameters left MuSourceLocation right MuSourceLocation Returns bool"
  },
  "api/Pinemach.Muml.MuSourceSpan.html": {
    "href": "api/Pinemach.Muml.MuSourceSpan.html",
    "title": "Struct MuSourceSpan | Pinemach.Muml",
    "summary": "Struct MuSourceSpan Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Represents a byte span within a source text, with start and end location. public struct MuSourceSpan Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors MuSourceSpan(MuSourceLocation) public MuSourceSpan(MuSourceLocation loc) Parameters loc MuSourceLocation MuSourceSpan(MuSourceLocation, MuSourceLocation) public MuSourceSpan(MuSourceLocation start, MuSourceLocation end) Parameters start MuSourceLocation end MuSourceLocation MuSourceSpan(string?, int, int, int, int, int, int) public MuSourceSpan(string? fileName, int startIndex, int startLineStartIndex, int startLineNumber, int endIndex, int endLineStartIndex, int endLineNumber) Parameters fileName string startIndex int startLineStartIndex int startLineNumber int endIndex int endLineStartIndex int endLineNumber int Fields EndIndex public int EndIndex Field Value int EndLineNumber public int EndLineNumber Field Value int EndLineStartIndex public int EndLineStartIndex Field Value int FileName public string? FileName Field Value string None public static readonly MuSourceSpan None Field Value MuSourceSpan StartIndex public int StartIndex Field Value int StartLineNumber public int StartLineNumber Field Value int StartLineStartIndex public int StartLineStartIndex Field Value int Properties End public readonly MuSourceLocation End { get; } Property Value MuSourceLocation EndColumnNumber public readonly int EndColumnNumber { get; } Property Value int Length public readonly int Length { get; } Property Value int Start public readonly MuSourceLocation Start { get; } Property Value MuSourceLocation StartColumnNumber public readonly int StartColumnNumber { get; } Property Value int Methods EndToLString() public readonly string EndToLString() Returns string Equals(MuSourceSpan) public bool Equals(MuSourceSpan span) Parameters span MuSourceSpan Returns bool Equals(object?) Indicates whether this instance and a specified object are equal. public override bool Equals(object? obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. IsEndValid() public readonly bool IsEndValid() Returns bool IsStartAndEndValid() public readonly bool IsStartAndEndValid() Returns bool IsStartValid() public readonly bool IsStartValid() Returns bool StartToLString() public readonly string StartToLString() Returns string ToLString() public readonly string ToLString() Returns string ToString() Returns the fully qualified type name of this instance. public override readonly string ToString() Returns string The fully qualified type name. Operators operator ==(MuSourceSpan, MuSourceSpan) public static bool operator ==(MuSourceSpan left, MuSourceSpan right) Parameters left MuSourceSpan right MuSourceSpan Returns bool operator !=(MuSourceSpan, MuSourceSpan) public static bool operator !=(MuSourceSpan left, MuSourceSpan right) Parameters left MuSourceSpan right MuSourceSpan Returns bool"
  },
  "api/Pinemach.Muml.MuTextFormatSpecifier.html": {
    "href": "api/Pinemach.Muml.MuTextFormatSpecifier.html",
    "title": "Struct MuTextFormatSpecifier | Pinemach.Muml",
    "summary": "Struct MuTextFormatSpecifier Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Format settings relevant for parsing multi-line strings. Text format specifiers start with a vertical bar character. public struct MuTextFormatSpecifier Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors MuTextFormatSpecifier(MuTextFormatSpecifierBlock, MuTextFormatSpecifierEnd, int) public MuTextFormatSpecifier(MuTextFormatSpecifierBlock blockLines, MuTextFormatSpecifierEnd endLines, int firstLineIndent = 0) Parameters blockLines MuTextFormatSpecifierBlock endLines MuTextFormatSpecifierEnd firstLineIndent int Fields BlockLines public MuTextFormatSpecifierBlock BlockLines Field Value MuTextFormatSpecifierBlock Default public static readonly MuTextFormatSpecifier Default Field Value MuTextFormatSpecifier EndLines public MuTextFormatSpecifierEnd EndLines Field Value MuTextFormatSpecifierEnd FirstLineIndent public int FirstLineIndent Field Value int Methods ApplyFormat(string) Apply formatting settings to a string taken from Muml source. public string ApplyFormat(string text) Parameters text string Returns string"
  },
  "api/Pinemach.Muml.MuTextFormatSpecifierBlock.html": {
    "href": "api/Pinemach.Muml.MuTextFormatSpecifierBlock.html",
    "title": "Enum MuTextFormatSpecifierBlock | Pinemach.Muml",
    "summary": "Enum MuTextFormatSpecifierBlock Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Formatting options for how to handle lines within a multi-line Muml string. public enum MuTextFormatSpecifierBlock Fields Deindent = 2 Deindent lines, based on the indentation of the first non-blank line. Corresponds to the format specifier | . Fold = 3 Fold lines, similar to Markdown, or YAML's folded multi-line strings. Corresponds to the format specifier |> . Keep = 0 Keep text as-is. This is also the default with no format specifier present. Also corresponds to |= and |^ format specifiers. Strip = 1 Strip leading whitespace from the string. Corresponds to the format specifier |; ."
  },
  "api/Pinemach.Muml.MuTextFormatSpecifierEnd.html": {
    "href": "api/Pinemach.Muml.MuTextFormatSpecifierEnd.html",
    "title": "Enum MuTextFormatSpecifierEnd | Pinemach.Muml",
    "summary": "Enum MuTextFormatSpecifierEnd Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Formatting options for how to handle lines at the end of a multi-line Muml string. public enum MuTextFormatSpecifierEnd Fields KeepAll = 0 Don't remove any trailing whitespace. Append an asterisk * to use this behavior with a block format specifier such as || . This is the default with a |= specifier. KeepAllLines = 2 Don't remove any trailing newlines, but do trim trailing whitespace after the last newline. Append a plus + to use this behavior with a block format specifier such as || . This is also the default with no format specifier present. KeepOneLine = 1 Remove all but one trailing newline. This is the default with a || or |> specifier. Strip = 3 Strip all trailing whitespace. Append a minus - to use this behavior with a block format specifier such as || . This is the default with a |^ or |; specifier."
  },
  "api/Pinemach.Muml.MuTextType.html": {
    "href": "api/Pinemach.Muml.MuTextType.html",
    "title": "Enum MuTextType | Pinemach.Muml",
    "summary": "Enum MuTextType Namespace Pinemach.Muml Assembly Pinemach.Muml.dll public enum MuTextType Fields Backtick = 2 BacktickFence = 5 Default = 0 DoubleQuote = 0 DoubleQuoteFence = 3 SingleQuote = 1 SingleQuoteFence = 4"
  },
  "api/Pinemach.Muml.MuToken.html": {
    "href": "api/Pinemach.Muml.MuToken.html",
    "title": "Struct MuToken | Pinemach.Muml",
    "summary": "Struct MuToken Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Represents a single token within Muml source. public readonly struct MuToken Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors MuToken(MuTokenType, MuSourceSpan) public MuToken(MuTokenType type, MuSourceSpan span) Parameters type MuTokenType span MuSourceSpan MuToken(MuTokenType, MuSourceSpan, string?) public MuToken(MuTokenType type, MuSourceSpan span, string? text) Parameters type MuTokenType span MuSourceSpan text string Fields None public static readonly MuToken None Field Value MuToken Span public readonly MuSourceSpan Span Field Value MuSourceSpan Text public readonly string? Text Field Value string Type public readonly MuTokenType Type Field Value MuTokenType Properties Location public MuSourceLocation Location { get; } Property Value MuSourceLocation Methods BeginAttributes(MuSourceSpan) public static MuToken BeginAttributes(MuSourceSpan span) Parameters span MuSourceSpan Returns MuToken BeginAttributes(MuSourceSpan, string) public static MuToken BeginAttributes(MuSourceSpan span, string text) Parameters span MuSourceSpan text string Returns MuToken BeginMembers(MuSourceSpan) public static MuToken BeginMembers(MuSourceSpan span) Parameters span MuSourceSpan Returns MuToken BeginMembers(MuSourceSpan, string) public static MuToken BeginMembers(MuSourceSpan span, string text) Parameters span MuSourceSpan text string Returns MuToken EndAttributes(MuSourceSpan) public static MuToken EndAttributes(MuSourceSpan span) Parameters span MuSourceSpan Returns MuToken EndAttributes(MuSourceSpan, string) public static MuToken EndAttributes(MuSourceSpan span, string text) Parameters span MuSourceSpan text string Returns MuToken EndMembers(MuSourceSpan) public static MuToken EndMembers(MuSourceSpan span) Parameters span MuSourceSpan Returns MuToken EndMembers(MuSourceSpan, string) public static MuToken EndMembers(MuSourceSpan span, string text) Parameters span MuSourceSpan text string Returns MuToken Equals(MuSourceSpan) public static MuToken Equals(MuSourceSpan span) Parameters span MuSourceSpan Returns MuToken Equals(MuSourceSpan, string) public static MuToken Equals(MuSourceSpan span, string text) Parameters span MuSourceSpan text string Returns MuToken Equals(MuToken) public bool Equals(MuToken token) Parameters token MuToken Returns bool Equals(object?) Indicates whether this instance and a specified object are equal. public override bool Equals(object? obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. FencedComment(MuSourceSpan) public static MuToken FencedComment(MuSourceSpan span) Parameters span MuSourceSpan Returns MuToken GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Identifier(MuSourceSpan, string) public static MuToken Identifier(MuSourceSpan span, string text) Parameters span MuSourceSpan text string Returns MuToken IsBeginAttributes() public bool IsBeginAttributes() Returns bool IsBeginMembers() public bool IsBeginMembers() Returns bool IsComment() public bool IsComment() Returns bool IsEndAttributes() public bool IsEndAttributes() Returns bool IsEndMembers() public bool IsEndMembers() Returns bool IsEquals() public bool IsEquals() Returns bool IsFencedComment() public bool IsFencedComment() Returns bool IsIdentifier() public bool IsIdentifier() Returns bool IsLineComment() public bool IsLineComment() Returns bool IsNestedBlockComment() public bool IsNestedBlockComment() Returns bool IsString() public bool IsString() Returns bool IsValid() public bool IsValid() Returns bool LineComment(MuSourceSpan) public static MuToken LineComment(MuSourceSpan span) Parameters span MuSourceSpan Returns MuToken NestedBlockComment(MuSourceSpan) public static MuToken NestedBlockComment(MuSourceSpan span) Parameters span MuSourceSpan Returns MuToken String(MuSourceSpan, string?) public static MuToken String(MuSourceSpan span, string? text) Parameters span MuSourceSpan text string Returns MuToken ToString() Returns the fully qualified type name of this instance. public override string? ToString() Returns string The fully qualified type name. Operators operator ==(MuToken, MuToken) public static bool operator ==(MuToken left, MuToken right) Parameters left MuToken right MuToken Returns bool operator !=(MuToken, MuToken) public static bool operator !=(MuToken left, MuToken right) Parameters left MuToken right MuToken Returns bool"
  },
  "api/Pinemach.Muml.MuTokenType.html": {
    "href": "api/Pinemach.Muml.MuTokenType.html",
    "title": "Enum MuTokenType | Pinemach.Muml",
    "summary": "Enum MuTokenType Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Enumeration of recognized Muml token types. public enum MuTokenType Fields BeginAttributes = 4 BeginMembers = 6 EndAttributes = 5 EndMembers = 7 Equals = 3 FencedComment = 9 Identifier = 1 LineComment = 8 NestedBlockComment = 10 None = 0 String = 2"
  },
  "api/Pinemach.Muml.MuTokenizer.html": {
    "href": "api/Pinemach.Muml.MuTokenizer.html",
    "title": "Class MuTokenizer | Pinemach.Muml",
    "summary": "Class MuTokenizer Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Implements parsing logic for separating an input text stream into Muml tokens. This is used by the MuParser. public class MuTokenizer : IDisposable Inheritance object MuTokenizer Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MuTokenizer(TextReader) public MuTokenizer(TextReader reader) Parameters reader TextReader MuTokenizer(string) public MuTokenizer(string source) Parameters source string MuTokenizer(string?, TextReader) public MuTokenizer(string? fileName, TextReader reader) Parameters fileName string reader TextReader MuTokenizer(string?, string) public MuTokenizer(string? fileName, string source) Parameters fileName string source string Fields Errors Error log object, to which tokenization errors are added. public readonly MuSourceErrors Errors Field Value MuSourceErrors Methods Dispose() Dispose of the underlying TextReader object. public void Dispose() IsOk() Returns true when the tokenizer has no errors associated with it. public bool IsOk() Returns bool NextToken() Parse and return the next token in the input text. Returns MuToken.None when there were no more tokens to parse. public MuToken NextToken() Returns MuToken"
  },
  "api/Pinemach.Muml.MuUtil.html": {
    "href": "api/Pinemach.Muml.MuUtil.html",
    "title": "Class MuUtil | Pinemach.Muml",
    "summary": "Class MuUtil Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Contains an assortment of utility and helper functions related to Muml functionality. public static class MuUtil Inheritance object MuUtil Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetCharEscape(int, bool, bool) Get an escape sequence string corresponding to a given character. Returns null when the character has no corresponding escape sequence. public static string GetCharEscape(int ch, bool escDoubleQuote = false, bool escSingleQuote = false) Parameters ch int escDoubleQuote bool escSingleQuote bool Returns string IsIdentifierChar(int) Check whether a character is valid in a Muml identifier. A Muml identifier may contain any characters except for whitespace and metacharacters. public static bool IsIdentifierChar(int ch) Parameters ch int Returns bool IsIdentifierString(string) Check whether a given string forms a valid Muml identifier. A Muml identifier is a non-empty string with no whitespace or metacharacters. public static bool IsIdentifierString(string text) Parameters text string Returns bool IsMetaChar(int) Check whether a character is a Muml metacharacter. The metacharacters are ASCII #=|,;&()[]{}`'\" . This includes hashes, equals, open and close braces, open and close brackets, backticks, single quotes, and double quotes. public static bool IsMetaChar(int ch) Parameters ch int Returns bool IsQuoteChar(int) Check whether a character is a Muml string literal quote character. The quote characters are ASCII `'\" , i.e. backticks, single quotes, and double quotes. public static bool IsQuoteChar(int ch) Parameters ch int Returns bool IsWhitespaceChar(int) Check whether a character is an ASCII whitespace character. public static bool IsWhitespaceChar(int ch) Parameters ch int Returns bool ToIdentifierString(string) If the given text forms a valid Muml identifier, then return it as-is. Otherwise, format it as a double quoted string literal. public static string ToIdentifierString(string text) Parameters text string Returns string ToIdentifierString(string, MuTextType) If the given text forms a valid Muml identifier, then return it as-is. Otherwise, try to format it as a string literal of the given type. public static string ToIdentifierString(string text, MuTextType textType) Parameters text string textType MuTextType Returns string ToQuotedString(string) Format text as a string literal enclosed in double quotes. Special characters within the string are escaped using backslashes. public static string ToQuotedString(string text) Parameters text string Returns string ToQuotedString(string, MuTextType) Format text as a string literal of the given type. If the string is impossible to represent as a literal of the given type, then a fallback format will be used instead. public static string ToQuotedString(string text, MuTextType textType) Parameters text string textType MuTextType Returns string ToQuotedStringBacktickFence(string) Format text as a string literal enclosed in backtick fences. Backticks within backtick fences can't be escaped. public static string ToQuotedStringBacktickFence(string text) Parameters text string Returns string ToQuotedStringBackticks(string) Format text as a string literal enclosed in backticks. Backticks within the text are escaped as double backticks. public static string ToQuotedStringBackticks(string text) Parameters text string Returns string ToQuotedStringDoubleQuoteFence(string) Format text as a string literal enclosed in double quote fences. Special characters within the string are escaped using backslashes. public static string ToQuotedStringDoubleQuoteFence(string text) Parameters text string Returns string ToQuotedStringDoubleQuoted(string) Format text as a string literal enclosed in double quotes. Special characters within the string are escaped using backslashes. public static string ToQuotedStringDoubleQuoted(string text) Parameters text string Returns string ToQuotedStringSingleQuoteFence(string) Format text as a string literal enclosed in single quote fences. Special characters within the string are escaped using backslashes. public static string ToQuotedStringSingleQuoteFence(string text) Parameters text string Returns string ToQuotedStringSingleQuoted(string) Format text as a string literal enclosed in single quotes. Special characters within the string are escaped using backslashes. public static string ToQuotedStringSingleQuoted(string text) Parameters text string Returns string UnescapeBacktickString(string) Unescape a string literal using backtick escapes. public static string UnescapeBacktickString(string text) Parameters text string Returns string UnescapeQuotedString(string) Unescape a string literal using backslash escape sequences. The returned int represents the first index of a malformed escape sequence, or -1 if there were no malformed escape sequences. public static (int, string) UnescapeQuotedString(string text) Parameters text string Returns (int, string)"
  },
  "api/Pinemach.Muml.MuValues.html": {
    "href": "api/Pinemach.Muml.MuValues.html",
    "title": "Class MuValues | Pinemach.Muml",
    "summary": "Class MuValues Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Represents a list of value strings associated with a MuElement or MuDocument. public class MuValues : List<string>, IList<string>, ICollection<string>, IReadOnlyList<string>, IReadOnlyCollection<string>, IEnumerable<string>, IList, ICollection, IEnumerable Inheritance object List<string> MuValues Implements IList<string> ICollection<string> IReadOnlyList<string> IReadOnlyCollection<string> IEnumerable<string> IList ICollection IEnumerable Inherited Members List<string>.Add(string) List<string>.AddRange(IEnumerable<string>) List<string>.AsReadOnly() List<string>.BinarySearch(int, int, string, IComparer<string>) List<string>.BinarySearch(string) List<string>.BinarySearch(string, IComparer<string>) List<string>.Clear() List<string>.Contains(string) List<string>.ConvertAll<TOutput>(Converter<string, TOutput>) List<string>.CopyTo(int, string[], int, int) List<string>.CopyTo(string[]) List<string>.CopyTo(string[], int) List<string>.EnsureCapacity(int) List<string>.Exists(Predicate<string>) List<string>.Find(Predicate<string>) List<string>.FindAll(Predicate<string>) List<string>.FindIndex(int, int, Predicate<string>) List<string>.FindIndex(int, Predicate<string>) List<string>.FindIndex(Predicate<string>) List<string>.FindLast(Predicate<string>) List<string>.FindLastIndex(int, int, Predicate<string>) List<string>.FindLastIndex(int, Predicate<string>) List<string>.FindLastIndex(Predicate<string>) List<string>.ForEach(Action<string>) List<string>.GetEnumerator() List<string>.GetRange(int, int) List<string>.IndexOf(string) List<string>.IndexOf(string, int) List<string>.IndexOf(string, int, int) List<string>.Insert(int, string) List<string>.InsertRange(int, IEnumerable<string>) List<string>.LastIndexOf(string) List<string>.LastIndexOf(string, int) List<string>.LastIndexOf(string, int, int) List<string>.Remove(string) List<string>.RemoveAll(Predicate<string>) List<string>.RemoveAt(int) List<string>.RemoveRange(int, int) List<string>.Reverse() List<string>.Reverse(int, int) List<string>.Sort() List<string>.Sort(IComparer<string>) List<string>.Sort(Comparison<string>) List<string>.Sort(int, int, IComparer<string>) List<string>.ToArray() List<string>.TrimExcess() List<string>.TrueForAll(Predicate<string>) List<string>.Capacity List<string>.Count List<string>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MuValues() public MuValues() MuValues(IEnumerable<string>) public MuValues(IEnumerable<string> collection) Parameters collection IEnumerable<string> MuValues(int) public MuValues(int capacity) Parameters capacity int Methods ContainsValue(string?) public bool ContainsValue(string? value) Parameters value string Returns bool From(IEnumerable<string>?) Initialize MuValues from values. public static MuValues From(IEnumerable<string>? values) Parameters values IEnumerable<string> Returns MuValues GetHashSet() Get a HashSet representation of this attribute list. public HashSet<string> GetHashSet() Returns HashSet<string> ToString() Get a Muml representation of this value list. public override string ToString() Returns string"
  },
  "api/Pinemach.Muml.MuWriter.html": {
    "href": "api/Pinemach.Muml.MuWriter.html",
    "title": "Class MuWriter | Pinemach.Muml",
    "summary": "Class MuWriter Namespace Pinemach.Muml Assembly Pinemach.Muml.dll Implements functions for serializing Muml objects to strings. public class MuWriter Inheritance object MuWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MuWriter() public MuWriter() MuWriter(string?) public MuWriter(string? indent) Parameters indent string MuWriter(string?, string?, MuTextType, MuTextType, MuTextType, MuTextType, MuTextType, MuTextType, bool) public MuWriter(string? indent, string? newline, MuTextType preferHeaderType, MuTextType preferTagType, MuTextType preferValueType, MuTextType preferTextType, MuTextType preferAttributeNameType, MuTextType preferAttributeValueType, bool reduceSpaces = false) Parameters indent string newline string preferHeaderType MuTextType preferTagType MuTextType preferValueType MuTextType preferTextType MuTextType preferAttributeNameType MuTextType preferAttributeValueType MuTextType reduceSpaces bool MuWriter(string?, string?, MuTextType, bool) public MuWriter(string? indent, string? newline, MuTextType preferTextType, bool reduceSpaces = false) Parameters indent string newline string preferTextType MuTextType reduceSpaces bool MuWriter(string?, string?, bool) public MuWriter(string? indent, string? newline, bool reduceSpaces = false) Parameters indent string newline string reduceSpaces bool Fields Condensed public static readonly MuWriter Condensed Field Value MuWriter Default public static readonly MuWriter Default Field Value MuWriter DefaultIndent public const string DefaultIndent = \" \" Field Value string DefaultNewline public const string DefaultNewline = \"\\n\" Field Value string Indent public string? Indent Field Value string Minimized public static readonly MuWriter Minimized Field Value MuWriter Newline public string? Newline Field Value string PreferAttributeNameType public MuTextType PreferAttributeNameType Field Value MuTextType PreferAttributeValueType public MuTextType PreferAttributeValueType Field Value MuTextType PreferHeaderType public MuTextType PreferHeaderType Field Value MuTextType PreferTagType public MuTextType PreferTagType Field Value MuTextType PreferTextType public MuTextType PreferTextType Field Value MuTextType PreferValueType public MuTextType PreferValueType Field Value MuTextType ReduceSpaces public bool ReduceSpaces Field Value bool Methods WriteAttribute(MuAttribute) public string WriteAttribute(MuAttribute attr) Parameters attr MuAttribute Returns string WriteAttribute(MuAttribute, TextWriter) public void WriteAttribute(MuAttribute attr, TextWriter writer) Parameters attr MuAttribute writer TextWriter WriteAttributes(IEnumerable<MuAttribute>) public string WriteAttributes(IEnumerable<MuAttribute> members) Parameters members IEnumerable<MuAttribute> Returns string WriteAttributes(IEnumerable<MuAttribute>?, TextWriter) public void WriteAttributes(IEnumerable<MuAttribute>? attrs, TextWriter writer) Parameters attrs IEnumerable<MuAttribute> writer TextWriter WriteDocument(MuDocument) public string WriteDocument(MuDocument doc) Parameters doc MuDocument Returns string WriteDocument(MuDocument?, TextWriter) public void WriteDocument(MuDocument? doc, TextWriter writer) Parameters doc MuDocument writer TextWriter WriteElement(MuElement, string?) public string WriteElement(MuElement el, string? indent = null) Parameters el MuElement indent string Returns string WriteElement(MuElement?, string?, TextWriter) public void WriteElement(MuElement? el, string? indent, TextWriter writer) Parameters el MuElement indent string writer TextWriter WriteMembers(IEnumerable<MuElement>, string?) public string WriteMembers(IEnumerable<MuElement> members, string? indent = null) Parameters members IEnumerable<MuElement> indent string Returns string WriteMembers(IEnumerable<MuElement>?, string?, TextWriter) public void WriteMembers(IEnumerable<MuElement>? members, string? indent, TextWriter writer) Parameters members IEnumerable<MuElement> indent string writer TextWriter WriteValues(IEnumerable<string>) public string WriteValues(IEnumerable<string> values) Parameters values IEnumerable<string> Returns string WriteValues(IEnumerable<string>?, TextWriter, bool) public void WriteValues(IEnumerable<string>? values, TextWriter writer, bool lineSep) Parameters values IEnumerable<string> writer TextWriter lineSep bool"
  },
  "api/Pinemach.Muml.html": {
    "href": "api/Pinemach.Muml.html",
    "title": "Namespace Pinemach.Muml | Pinemach.Muml",
    "summary": "Namespace Pinemach.Muml Classes MuAttributes Represents a list of attributes belonging to a MuElement. MuDocument Represents a Muml document, typically corresponding to a single file. A document is a collection of one or more top-level Muml elements, plus optional header content. MuDocumentContentComparer Comparer which checks equality of document content. MuElement Represents an element within a Muml document. Elements are the fundamental unit of structure and data within a document. name=value \"text\" [attrName=attrValue] {memberName} MuElementContentComparer Comparer which checks equality of element content. MuHasAttributesExtensions Extension methods for MuElement objects. MuHasMembersExtensions Extension methods for MuDocument and MuElement objects. MuHasValuesExtensions Extension methods for MuDocument and MuElement objects. MuMembers Represents a list of member elements associated with a MuElement or MuDocument. MuParser Implements a parser which takes Muml source in and outputs a corresponding MuDocument object. MuSourceErrors Represents the list of errors encountered while parsing Muml source. MuTokenizer Implements parsing logic for separating an input text stream into Muml tokens. This is used by the MuParser. MuUtil Contains an assortment of utility and helper functions related to Muml functionality. MuValues Represents a list of value strings associated with a MuElement or MuDocument. MuWriter Implements functions for serializing Muml objects to strings. Structs MuAttribute Represents an attribute belonging to a MuElement. An attribute is fundamentally a key, value pair. MuSourceError Represents an error encountered while parsing Muml source. MuSourceLocation Represents a single specific byte location within a source text. MuSourceSpan Represents a byte span within a source text, with start and end location. MuTextFormatSpecifier Format settings relevant for parsing multi-line strings. Text format specifiers start with a vertical bar character. MuToken Represents a single token within Muml source. Interfaces IMuHasAttributes Interface implemented by MuElement. IMuHasMembers Interface implemented by MuDocument and MuElement. IMuHasValues Interface implemented by MuDocument and MuElement. Enums MuSourceErrorType Enumeration of possible errors that may occur when dealing with Muml source text. MuTextFormatSpecifierBlock Formatting options for how to handle lines within a multi-line Muml string. MuTextFormatSpecifierEnd Formatting options for how to handle lines at the end of a multi-line Muml string. MuTextType MuTokenType Enumeration of recognized Muml token types."
  },
  "index.html": {
    "href": "index.html",
    "title": "Pinemach.Muml: Micro Markup Language for C# | Pinemach.Muml",
    "summary": "Pinemach.Muml: Micro Markup Language for C# Muml (or μml) is the Micro Markup Language. It is intended as an alternative to XML with a simplified, less verbose, and more human-readable syntax. This library implements an API for parsing, serializing, navigating, and manipulating Muml documents in C#. It works with UTF-8 and ASCII string encodings. It does not interpret or coerce data types, but presents everything as strings. Every Muml document is a self-contained unit. A Muml parser will never access other files, send network requests, or execute arbitrary code in the process of parsing a document. # This is an example Muml document h1 \"Hello, world!\" [style=bold micro=yes] p |> ''' Muml is the Micro Markup Language. It's similar to XML, but simplified and less verbose. ''' ul \"When to use Muml\" { li | You want something like XML but more human-friendly li | You want it small, simple, and robust li | You want it easy and simple to work with in code } a \"Homepage\" [ href=\"https://github.com/pineapplemachine/Pinemach.Muml.cs\" ] The most important semantic different from XML is the absence of text nodes. With Muml, you must attach text to an element with an explicit name. <body> <h1>Hello, world!</h1> In XML, it's permitted to put text between elements. This creates text nodes, distinct from element nodes. <span>Neat!</span> </body> body { h1 | Hello, world! text | In Muml, text must be associated with an element. span | Gotcha! } C# API This package can be installed with NuGet, e.g. via nuget install Pinemach.Muml in a CLI. Generated API documentation for Pinemach.Muml is here: https://pineapplemachine.github.io/Pinemach.Muml.cs/ Basic usage example: using Pinemach.Muml; public class Example { public static void Main() { // Parse Muml document from a file var doc = MuDocument.Load(path); // Manipulate Muml document var el = new MuElement(\"div\"); el.AddAttribute(\"hello\", \"world\"); doc.AddMember(el); // Get Muml source from a MuDocument string mumlSrc = doc.ToString(); Console.WriteLine(mumlSrc); // Save MuDocument to a file doc.Save(\"mydocument.muml\"); } } Document structure A Muml document is an ordered list of one or more member elements. An element has: A name, always. Any number of values, each of which is a string. Any number of attributes, each of which is a name=value pair. Any number of members, each of which is another Muml element. Here is what an element with one of every component looks like: name=value \"text\" [attrName=attrValue] {memberName} The order and amount of items is not strict, except that the element's name must come first. Values, text, attributes, and members are always associated with the last named element. Element name - MuElement.Name Element names are written as either an identifier string like-so, or a quoted string inside braces {\"like so\"}. This is the only mandatory part of an element to include. name {\"name with spaces and special characters $?[]\"} Element values - MuElement.Values Element values are indicated with an equals sign =. Element text - MuElement.Text Element text cannot be written as an identifier, but must be written as a quoted string. Element attributes - MuElement.Attributes Element attributes are name=value attribute assignments enclosed within a pair of brackets []. Attribute names are not required to be unique. These are also valid attribute assignments: element [attrName] element [attrName=] element [=attrValue] Note that in this C# implementation, an omitted attribute name or value is represented as null rather than as an empty string. Element members - MuElement.Members Element members is a sequence of any number of other elements, enclosed within a pair of braces {}. Document metadata - MuDocument.Header & MuDocument.Values If text or values appear at the beginning of a document, before the first element, then they are interpreted as document metadata. \"Document header\" =value1 =value2 first-element Comments Muml has three options for comments: # line comments, ### fenced comments ###, and #[ block comments #]. A fenced begins with at least three hashes # and ends the next time that same number of consecutive hashes is found again. # Line comment h1 | Hello ### Fenced comment ### span | world ### Fenced comments can be multi-line. ### div [style='cool'] #[ Block comment #] h2 | Lorem #[ Block comments can be #[ nested #] and can span multiple lines. #] span | ipsum Strings Strings in Muml are divided into the two categories of quoted strings and identifier strings. The distinction between identifier strings and quoted strings is that element names must be written as identifier strings and element text must be written as quoted strings. In all other places, they may be used interchangeably. element-name \"text associated with the element\" element-name \"text\" \"and more text\" element-name another-element-name element-name {\"another element name\"} String syntax There are several ways to write quoted strings in Muml. Double quoted, \"like this\". Single quoted, 'like this'. Backtick enclosed, `like this`. Double quote fenced, \"\"\"like this\"\"\". Single quote fenced, '''like this'''. Backtick fenced, ```like this```. To end of line, | like this. And there are two ways to write identifier strings. Plain, like-this. Braced, {\"like this\"}. A string that is made up entirely of non-whitespace characters and non-metacharacters (everything but \\t\\r\\n``'\"()[]{}|&;=#) can be written as a plain identifier, without any enclosing quotes, like-so. Other strings can be written as braced identifiers by adding braces around a quoted string, {\"like this\"}. Double quoted and single quoted strings may not span across multiple lines. They use backslash escape sequences for special characters, like \\n or \\\" or \\\\. Backtick enclosed strings may span multiple lines. The only escape sequence recognized inside a backtick string is two consecutive backticks `` representing a single escaped backtick. Double quote fenced and single quote fenced strings are allowed to span multiple lines. They use backslash escape sequences for special characters. They begin with three or more consecutive quote characters and end with the same. Backtick fenced strings may span multiple lines. They begin with three or more consecutive backtick characters and end with the same. They do not recognize any escape sequences whatosever. To end of line strings count as quoted strings when distinguishing between element names and text. They begin with a vertical bar | follow by at least one whitespace character. They end at the next newline. The resulting string has any preceding or trailing whitespace stripped from it. These strings do not recognize any escape sequences. Format specifiers Non-identifier strings can be written with a preceding string format specifier which affects how multi-line strings should be parsed, like | or |>. They are also allowed inside braced identifiers, e.g. {|; 'name'}. See String format specifiers for more information about format specifiers. element |> ''' This is folded text, like when writing `key: > ...` in YAML. ''' Omitted and empty strings Note that Muml does distinguish between omitted strings and explicitly defined empty strings. These are represented as null and the empty string \"\" respectively, in this C# API. element # omitted text (null) element \"\" # explicit empty text (\"\") String escape sequences Muml recognizes these standard escape sequences: \\0 - Null character (0x00) \\a - Alert (0x07) \\b - Backspace (0x08) \\t - Tab (0x09) \\n - Line feed (0x0a) \\v - Vertical tab (0x0b) \\f - Form feed (0x0c) \\r - Carriage return (0x0d) \\e - Escape character (0x1b) \\\" - Double quote, same character \\' - Single quote, same character \\\\ - Backslash, same character \\xhh - UTF-8 code unit \\uhhhh - UTF-16 code unit \\Uhhhhhhhh - Unicode code point This C# implementation produces an error for any series of \\xhh escape sequences that does not represent valid WTF-8 text. (This means UTF-8 plus legal surrogate pair characters.) Muml implementations for languages that use UTF-8 encoded strings internally are encouraged to provide a configuration option to accept arbitrary \\xhh byte sequences, but should produce an error by default. String format specifiers Strings can optionally be preceded by a format specifier, which is a special series of characters starting with a vertical bar |. Format specifiers are intended mainly for use with multi-line strings. They behave similarly to block scalar headers in YAML, with some expanded options. Muml retains the same line endings as whatever was found in the source when deindenting or folding strings. (This means LF/CRLF is preserved.) Format specifiers have one mandatory part and two optional parts: Block format, ending format, and first-line indentation. The block format is one of these: || - Deindent: Deindent based on indentation of the first non-blank line. Second part defaults to Keep One. |> - Fold: Deindent lines and fold paragraphs, similar to Markdown. Second part defaults to Keep One. |; - Strip: Strip leading whitespace. Second part defaults to Strip as well. |^ - Keep: No change to leading whitespace. Second part defaults to Strip. |= - Keep: No change to leading whitespace. Second part defaults to Keep All. The ending format is one of these: $ - Keep One. Remove all trailing whitespace, except one newline if there was any. + - Keep Lines. Keep all trailing lines, but trim trailing whitespace on the last line. * - Keep All. Don't remove any trailing whitespace. - - Strip. Remove any and all trailing whitespace. The third part, the first-line indentation, is zero or more period . characters. This may be relevant when deindenting or folding lines. Each period . corresponds to one whitespace character by which the first non-blank line is deliberately indented further than the subsequent lines. With all of this put together, the format specifier ||+.. for example would deindent lines, keep trailing newlines, and indicate that the first line is intentionally indented by two more characters than the second line. e ||+.. ''' Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. ''' Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. With deindent formatting, all lines after the first not-blank line have matching whitespace removed from their beginning. p || ''' Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. ''' Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. With fold formatting, lines separated by only a single newline are treated as being part of a same paragraph. p |> ''' Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. ''' Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Repeated element items The items following an element name are not required to be unique. Multiple values are all attached to an element in order. name =value1 =value2 =value3 Multiple text items are all concatenated together in order. If the new text item is blank, a newline is appended to the previous text. Otherwise, it's concatenated with the previous text, and a single space is added between them if there would not otherwise be any whitespace in between. # These two elements are equivalent name \"Hello,\" \"World!\" name \"Hello, World!\" # So are these name \"One two three\\nFour five\" name | One two | three | | Four | five Multiple attribute lists are concatenated in order. # These two elements are equivalent name [x=1 y=2] [z=3 w=4] [] name [x=1 y=2 z=3 w=4] Multiple member lists are concatenated in order. # These two elements are equivalent name {a b} {} {c d} name {a b c d} Miscellanea Muml should be pronounced like myu-mul. The ampersand &, semicolon ;, comma ,, and parentheses () are currently unused metacharacters, reserved for future use."
  }
}